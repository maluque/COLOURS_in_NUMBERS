{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "5cabd69d",
   "metadata": {},
   "source": [
    "# TRANSFORM (II)\n",
    "\n",
    "0. Import modules\n",
    "1. Load clean dataframes\n",
    "2. Merge all dataframes (amz, asos, men and women)\n",
    "3. Classify according to \"type\" of clothing\n",
    "4. Filter out irrelevant types: \"zapatos\", \"mallas\", \"falda\", \"pantalones\"\n",
    "5. Divide price by pack when necessary"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14f1cff2",
   "metadata": {},
   "source": [
    "### 0. Import modules"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fded50a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import modules etc\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import re\n",
    "import random\n",
    "from unidecode import unidecode\n",
    "import re\n",
    "\n",
    "np.random.seed(42)\n",
    "pd.set_option('display.max_columns', None) # show all the columns\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore') # ignorar warnings\n",
    "\n",
    "from src import dataanalysis_fun1 as eda # Import my module\n",
    "\n",
    "####\n",
    "# import mysql.connector as conn\n",
    "# from sqlalchemy import create_engine"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e62b2e3a",
   "metadata": {},
   "source": [
    "### 1. Load clean dataframes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6815210e",
   "metadata": {},
   "outputs": [],
   "source": [
    "amz_men=pd.read_csv(\"../data/clean/amz1_men_clothes_clean.csv\")\n",
    "amz_wom=pd.read_csv(\"../data/clean/amz1_women_clothes_clean.csv\")\n",
    "\n",
    "aso_men=pd.read_csv(\"../data/clean/asos_men_clothes_clean.csv\")\n",
    "aso_wom=pd.read_csv(\"../data/clean/asos_women_clothes_clean.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "940f647e",
   "metadata": {},
   "outputs": [],
   "source": [
    "amz_men[[\"shop\", \"gender\"]]=[\"amz\", \"men\"]\n",
    "amz_wom[[\"shop\", \"gender\"]]=[\"amz\", \"women\"]\n",
    "aso_men[[\"shop\", \"gender\"]]=[\"asos\", \"men\"]\n",
    "aso_wom[[\"shop\", \"gender\"]]=[\"asos\", \"women\"]\n",
    "\n",
    "clothes_df=pd.concat([amz_men, amz_wom, aso_men, aso_wom], axis=0, ignore_index=True)\n",
    "clothes_df=clothes_df.sort_values(by=['brand', \"colour\", \"gender\", \"price\"], ascending=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ee44736c",
   "metadata": {},
   "source": [
    "### 2. Classify products according to their description\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "67a8e9ee",
   "metadata": {},
   "outputs": [],
   "source": [
    "type_dict={\"camiseta\":[\"camiseta\", \"shirt\", \"polo\", \"Camicetta\", \"manga larga\", \"camisola\", \"manica lunga\"],\n",
    "           \"top\": [\"top\"],\n",
    "           \"chaqueta\":[\"Cazadora\", \"casaca\", \"chaqueta\", \"Jacket\", \"Poncho\", \"Abrigo\"],\n",
    "           \"sudadera\":[\"Hoodie\",\"sudadera\",\"polar\",\"Hoody\", \"Sweater\", \"Sueter\", \"Suter\", \"chaleco\"],\n",
    "           \"jersey\":[\"jersey\", \"pulover\", \"pullover\", \"cardigan\", \"Jumper\"],\n",
    "           \"vestido\":[\"vestido\", \"tunica\", \"camison\"],\n",
    "           \"camisa\": [\"camisa\", \"blusa\", \"blouse\", \"bluse\"],\n",
    "           \"lenceria\":[\"lenceria\", \"sujetador\", \"corse\", \"interior\", \"Sock\"],\n",
    "           \"pantalones\": [\"pantalones\",  \"jeans\", \"vaqueros\"],\n",
    "          \"mallas\": [ \"leggings\", \"mallas\", \"joggers\", \"mallot\", \"leotardo\"],\n",
    "            \"falda\": [ \"falda\"],\n",
    "                       \"zapatos\": [ \"zapatos\"]\n",
    "          }\n",
    "                                                                          \n",
    "def color_dict_simplify(x):\n",
    "    x = x.lower()\n",
    "    x=unidecode(x) #Take out accentuation\n",
    "    theval=\"\"\n",
    "    for KKK, VVV in type_dict.items():\n",
    "        for VAL in VVV:\n",
    "            if VAL.lower() in x:\n",
    "                theval = KKK\n",
    "            \n",
    "    return theval\n",
    "\n",
    "clothes_df[\"type\"] = clothes_df['description'].apply(color_dict_simplify)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "563f9139",
   "metadata": {},
   "source": [
    "#### Filter out \"zapatos\", \"mallas\", \"falda\", \"pantalones\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "357889ea",
   "metadata": {},
   "outputs": [],
   "source": [
    "clothes_df = clothes_df[~clothes_df[\"type\"].isin([\"\", \"zapatos\", \"mallas\", \"falda\", \"pantalones\"])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8ec6f6bf",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(type\n",
       " camiseta    8392\n",
       " camisa      7828\n",
       " sudadera    7690\n",
       " vestido     7348\n",
       " jersey      3559\n",
       " top         2884\n",
       " lenceria     410\n",
       " chaqueta     394\n",
       " dtype: int64,\n",
       " (38505, 7))"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clothes_df.value_counts(\"type\"), clothes_df.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "081ed215",
   "metadata": {},
   "source": [
    "### 3.  Divide price of Packs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a1df87ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "pack_dict={\"pack\":[\"pack\", \"packs\"]}\n",
    "\n",
    "def subset_pack(x):\n",
    "    x = x.lower()\n",
    "    x=unidecode(x)\n",
    "    theval=1\n",
    "    for KKK, VVV in pack_dict.items():\n",
    "        for VAL in VVV:\n",
    "            if VAL.lower() in x: # the item is actually a pack\n",
    "                #find the number of elements and divide the price\n",
    "                digits_list = re.findall(r'\\b\\d\\b', x)\n",
    "\n",
    "                numeric_values = [int(digit) for digit in digits_list]\n",
    "                if numeric_values:\n",
    "                    theval = min(numeric_values)\n",
    "                    #if theval == 0:\n",
    "                    #    print(digits_only, x)\n",
    "                else:\n",
    "                    theval=1\n",
    "\n",
    "    return theval\n",
    "\n",
    "clothes_df[\"price_pack\"]=clothes_df['description'].apply(subset_pack)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87b76966",
   "metadata": {},
   "source": [
    "There are 2 rows including the term \"pack\" but actually being only a single product.<br/>\n",
    "These have a price_pack = 0, what returns and inf. <br/> Manually modify them to original price"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d36a8606",
   "metadata": {},
   "outputs": [],
   "source": [
    "zeroval=clothes_df[\"price_pack\"]==0\n",
    "\n",
    "clothes_df.loc[zeroval, 'price_pack'] = 1\n",
    "\n",
    "clothes_df[\"price_pack\"]=clothes_df[\"price\"]/clothes_df[\"price_pack\"]\n",
    "\n",
    "nan_inf_mask = clothes_df[\"price_pack\"].isin([np.nan, np.inf, -np.inf])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "370faf86",
   "metadata": {},
   "source": [
    "## 3. Save `clothes` dataframe\n",
    "\n",
    "* `complete` info of products: including description and original price\n",
    "* `simple` info of products: only **brand, color, type, gender, and price** divided by pack #\n",
    "\n",
    "The lines are commented to avoid overwriting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "03bcf8e7",
   "metadata": {},
   "outputs": [],
   "source": [
    "clothes_complete=clothes_df.copy()\n",
    "clothes_complete=clothes_complete.reset_index(drop=True)\n",
    "clothes_complete.index=clothes_complete.index+1\n",
    "clothes_simple=clothes_complete[[\"brand\", \"colour\", \"shop\",\"gender\", \"type\", \"price_pack\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "7c1a6309",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>brand</th>\n",
       "      <th>description</th>\n",
       "      <th>price</th>\n",
       "      <th>colour</th>\n",
       "      <th>shop</th>\n",
       "      <th>gender</th>\n",
       "      <th>type</th>\n",
       "      <th>price_pack</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>!Solid</td>\n",
       "      <td>SDBrice LS2 - Jersey de punto fino para hombre...</td>\n",
       "      <td>36.19</td>\n",
       "      <td>marfil</td>\n",
       "      <td>amz</td>\n",
       "      <td>men</td>\n",
       "      <td>jersey</td>\n",
       "      <td>36.19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>!Solid</td>\n",
       "      <td>SDGibril - Jersey - 21107899</td>\n",
       "      <td>45.40</td>\n",
       "      <td>marfil</td>\n",
       "      <td>amz</td>\n",
       "      <td>men</td>\n",
       "      <td>jersey</td>\n",
       "      <td>45.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>!Solid</td>\n",
       "      <td>SDElijah 21107501 - Jersey de punto grueso par...</td>\n",
       "      <td>49.94</td>\n",
       "      <td>marfil</td>\n",
       "      <td>amz</td>\n",
       "      <td>men</td>\n",
       "      <td>jersey</td>\n",
       "      <td>49.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>!Solid</td>\n",
       "      <td>SDLenz Zipper SW - Sudadera - 21107421</td>\n",
       "      <td>62.44</td>\n",
       "      <td>marfil</td>\n",
       "      <td>amz</td>\n",
       "      <td>men</td>\n",
       "      <td>sudadera</td>\n",
       "      <td>62.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>!Solid</td>\n",
       "      <td>Norwin Jersey De Punto Troyer Suéter Sudadera ...</td>\n",
       "      <td>62.44</td>\n",
       "      <td>marron</td>\n",
       "      <td>amz</td>\n",
       "      <td>men</td>\n",
       "      <td>jersey</td>\n",
       "      <td>62.44</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    brand                                        description  price  colour  \\\n",
       "1  !Solid  SDBrice LS2 - Jersey de punto fino para hombre...  36.19  marfil   \n",
       "2  !Solid                       SDGibril - Jersey - 21107899  45.40  marfil   \n",
       "3  !Solid  SDElijah 21107501 - Jersey de punto grueso par...  49.94  marfil   \n",
       "4  !Solid             SDLenz Zipper SW - Sudadera - 21107421  62.44  marfil   \n",
       "5  !Solid  Norwin Jersey De Punto Troyer Suéter Sudadera ...  62.44  marron   \n",
       "\n",
       "  shop gender      type  price_pack  \n",
       "1  amz    men    jersey       36.19  \n",
       "2  amz    men    jersey       45.40  \n",
       "3  amz    men    jersey       49.94  \n",
       "4  amz    men  sudadera       62.44  \n",
       "5  amz    men    jersey       62.44  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "clothes_complete.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "099c6602",
   "metadata": {},
   "outputs": [],
   "source": [
    "#clothes_simple.to_csv('../data/clean/clothes_simple.csv', index=False)\n",
    "#clothes_complete.to_csv('../data/clean/clothes_complete.csv', index=False)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "env37",
   "language": "python",
   "name": "env37"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.16"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
